var search_data = {"index":{"searchIndex":["generator","object","parser","tokenizer","consume()","generate()","new()","new()","parse()","parse_arg_exprs()","parse_arg_names()","parse_call()","parse_def()","parse_expr()","parse_integer()","parse_var_ref()","peek()","tokenize()","tokenize_one()","readme"],"longSearchIndex":["generator","object","parser","tokenizer","parser#consume()","generator#generate()","parser::new()","tokenizer::new()","parser#parse()","parser#parse_arg_exprs()","parser#parse_arg_names()","parser#parse_call()","parser#parse_def()","parser#parse_expr()","parser#parse_integer()","parser#parse_var_ref()","parser#peek()","tokenizer#tokenize()","tokenizer#tokenize_one()",""],"info":[["Generator","","Generator.html","","<p>Generates code from AST\n"],["Object","","Object.html","",""],["Parser","","Parser.html","","<p>Parses a list of tokens into an AST\n"],["Tokenizer","","Tokenizer.html","",""],["consume","Parser","Parser.html#method-i-consume","(expected_type)","<p>Consume a token, throw an error if next token not what expected\n"],["generate","Generator","Generator.html#method-i-generate","(node)","<p>Generates javascript from an AST\n"],["new","Parser","Parser.html#method-c-new","(tokens)",""],["new","Tokenizer","Tokenizer.html#method-c-new","(code)",""],["parse","Parser","Parser.html#method-i-parse","()",""],["parse_arg_exprs","Parser","Parser.html#method-i-parse_arg_exprs","()","<p>Parse function argument expressions\n"],["parse_arg_names","Parser","Parser.html#method-i-parse_arg_names","()","<p>Parse function argument names\n"],["parse_call","Parser","Parser.html#method-i-parse_call","()","<p>Parse function call\n"],["parse_def","Parser","Parser.html#method-i-parse_def","()","<p>Parse function definiton\n"],["parse_expr","Parser","Parser.html#method-i-parse_expr","()","<p>Parse expression\n"],["parse_integer","Parser","Parser.html#method-i-parse_integer","()","<p>Parse integer literal\n"],["parse_var_ref","Parser","Parser.html#method-i-parse_var_ref","()","<p>Parse variable reference\n"],["peek","Parser","Parser.html#method-i-peek","(expected_type, offset=0)","<p>Peek at the next token, or a token specified by an offset\n"],["tokenize","Tokenizer","Tokenizer.html#method-i-tokenize","()","<p>Create token array from code\n"],["tokenize_one","Tokenizer","Tokenizer.html#method-i-tokenize_one","()","<p>Create the next token\n"],["README","","README_md.html","","<p>Toy Compiler for ToyLang\n<p>Usage:\n\n<pre>$ ./compiler.rb &gt; out.js &amp;&amp; prettier --write out.js &amp;&amp; node out.js</pre>\n"]]}}